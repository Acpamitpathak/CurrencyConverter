import json
import os
from fastapi import UploadFile

async def read_uploaded_file_as_text_by_extension(self, file: UploadFile) -> str:
    """
    Reads an uploaded file and returns its content based on file extension.
    - For '.json' files: returns pretty-printed JSON.
    - For '.txt', '.md', etc: returns plain text.
    - If extension is misleading, still tries to handle gracefully.
    """
    try:
        # Read file content
        content = await file.read()
        decoded = content.decode("utf-8").strip()

        # Get file extension
        filename = file.filename
        ext = os.path.splitext(filename)[-1].lower()

        if ext == ".json":
            try:
                data = json.loads(decoded)
                return json.dumps(data, indent=2, ensure_ascii=False)
            except json.JSONDecodeError:
                return f"⚠️ File has .json extension but content is not valid JSON.\n\n{decoded}"

        elif ext in [".txt", ".md", ".log", ".cfg"]:
            return decoded  # Plain text

        else:
            # Unknown extension – fallback: try JSON, else plain
            try:
                data = json.loads(decoded)
                return json.dumps(data, indent=2, ensure_ascii=False)
            except json.JSONDecodeError:
                return decoded

    except Exception as e:
        return f"❌ Error reading file: {str(e)}"