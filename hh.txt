def save_json_as_markdown(self, data: dict) -> str:
    import os
    from datetime import datetime

    base_dir = os.path.dirname(os.path.abspath(__file__))
    output_dir = os.path.join(base_dir, "output")
    os.makedirs(output_dir, exist_ok=True)

    filename = f"evaluation_{datetime.now().strftime('%Y%m%d_%H%M%S')}.md"
    filepath = os.path.join(output_dir, filename)

    def format_dict(d, indent=0):
        lines = []
        for key, value in d.items():
            prefix = "  " * indent + f"**{key}**: "
            if isinstance(value, dict):
                lines.append("  " * indent + f"### {key}")
                lines.extend(format_dict(value, indent + 1))
            elif isinstance(value, list):
                lines.append(prefix)
                for item in value:
                    if isinstance(item, dict):
                        lines.extend(format_dict(item, indent + 1))
                    else:
                        lines.append("  " * (indent + 1) + f"- {item}")
            else:
                lines.append(prefix + f"{value}")
        return lines

    markdown_lines = [
        "# âœ… LLM Evaluation Output",
        "",
        "```json",
        json.dumps(data, indent=2),
        "```",
        "",
        "## ðŸ“Š Structured Summary",
        ""
    ]
    markdown_lines += format_dict(data)

    with open(filepath, "w", encoding="utf-8") as f:
        f.write("\n".join(markdown_lines))

    return filepath