import os
import json
from datetime import datetime

class MarkdownReportGenerator:
    def generate_markdown_report(self, response_data: dict) -> str:
        base_dir = os.path.dirname(os.path.abspath(__file__))
        output_dir = os.path.join(base_dir, "output")
        os.makedirs(output_dir, exist_ok=True)

        filename = f"evaluation_{datetime.now().strftime('%Y%m%d_%H%M%S')}.md"
        filepath = os.path.join(output_dir, filename)

        with open(filepath, "w", encoding="utf-8") as f:
            f.write("# 📝 LLM Evaluation Report\n\n")

            # Evaluation Summary
            summary = response_data.get("evaluation_summary", {})
            f.write("## 📊 Evaluation Summary\n")
            for key, value in summary.items():
                f.write(f"- **{key.replace('_', ' ').title()}**: {value}\n")
            f.write("\n")

            # Section Analysis
            sections = response_data.get("section_analysis", {})
            f.write("## 🧩 Section Analysis\n")
            for section, details in sections.items():
                f.write(f"### 🔹 {section.replace('_', ' ').title()}\n")
                for key, value in details.items():
                    f.write(f"- **{key.capitalize()}**: {value}\n")
                f.write("\n")

            # Compliance
            f.write("## ✅ Compliance Summary\n")
            f.write(f"- **Compliance Status**: {summary.get('compliance_status')}\n")
            f.write(f"- **Critical Findings**: {summary.get('critical_findings')}\n")
            f.write(f"- **Overall Score**: {summary.get('overall_score')}\n")

        return filepath