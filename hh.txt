import os
import json
from typing import Union
from PyPDF2 import PdfReader
from docx import Document

class FileContentExtractor:
    def extract_text_from_file(self, file_path: str) -> str:
        """
        Detects the file type and returns readable text content from:
        .txt, .json, .pdf, or .docx
        """
        if not os.path.exists(file_path):
            raise FileNotFoundError(f"File not found: {file_path}")

        ext = os.path.splitext(file_path)[1].lower()

        if ext == ".txt":
            return self._read_text(file_path)
        elif ext == ".json":
            return self._read_json(file_path)
        elif ext == ".pdf":
            return self._read_pdf(file_path)
        elif ext == ".docx":
            return self._read_docx(file_path)
        else:
            raise ValueError(f"Unsupported file type: {ext}")

    def _read_text(self, path: str) -> str:
        with open(path, "r", encoding="utf-8") as f:
            return f.read()

    def _read_json(self, path: str) -> str:
        with open(path, "r", encoding="utf-8") as f:
            try:
                data = json.load(f)
                return json.dumps(data, indent=2)
            except json.JSONDecodeError as e:
                return f"Invalid JSON: {str(e)}"

    def _read_pdf(self, path: str) -> str:
        reader = PdfReader(path)
        text = ""
        for page in reader.pages:
            text += page.extract_text() or ""
        return text.strip()

    def _read_docx(self, path: str) -> str:
        doc = Document(path)
        full_text = []
        for para in doc.paragraphs:
            full_text.append(para.text)
        return "\n".join(full_text).strip()




from file_content_extractor import FileContentExtractor

extractor = FileContentExtractor()
text = extractor.extract_text_from_file("/path/to/uploaded/file.pdf")
print(text)